# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install_linux:
    name: build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: ["ubuntu-latest"]  #, "macos-latest", "windows-latest"]
        python-version: ["3.8"]
    steps:
      - name: Clone iblenv repo
        uses: actions/checkout@v2

      - name: Create environment
        shell: bash
        run: $CONDA/bin/conda env create -q -f iblenv.yaml

  install_macOS:
    name: build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: ["macos-latest"]
        python-version: ["3.8"]
    steps:
      - name: Clone iblenv repo
        uses: actions/checkout@v2

      - name: Create environment
        shell: bash
        run: sudo $CONDA/bin/conda env create -q -f iblenv.yaml

  install_windows:
    name: build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: ["windows-latest"]
        python-version: ["3.8"]
    steps:
      - name: Clone iblenv repo
        uses: actions/checkout@v2

      - name: Create environment
        shell: powershell
        run:  "&$env:CONDA_EXE env create -q -f iblenv.yaml"

      # - uses: conda-incubator/setup-miniconda@v1.7.0
      #   with:
      #     auto-update-conda: true
      #     python-version: ${{ matrix.python-version }}
      #     activate-environment: iblenv
      #     environment-file: iblenv.yml

      # - name: Install Miniconda
      #   shell: bash
      #   run: |
      #     if [[ "${{ runner.os }}" = "Linux" ]]; then
      #       MINICONDA_FILENAME=Miniconda3-latest-Linux-x86_64.sh
      #       curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
      #       bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
      #     elif [[ "${{ runner.os }}" = "macOS" ]]; then
      #       MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
      #       curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
      #       bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
      #     elif [[ "${{ runner.os }}" = "Windows" ]]; then
      #       MINICONDA_FILENAME=Miniconda3-latest-Windows-x86_64.exe
      #       curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
      #       ./Miniconda3-latest-Windows-x86_64.exe //InstallationType=JustMe //RegisterPython=0 //S
      #     fi

      # - name: Create environment
      #   shell: bash
      #   run: $CONDA/bin/conda env create -q -f iblenv.yaml
