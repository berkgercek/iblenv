# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job01:
    name: run (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]  # , "macos-latest", "windows-latest"]
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v2

      # - name: Install Miniconda
      #   shell: bash
      #   run: |
      #     if [[ "${{ runner.os }}" = "Linux" ]]; then
      #       MINICONDA_FILENAME=Miniconda3-latest-Linux-x86_64.sh
      #       curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
      #       bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
      #     elif [[ "${{ runner.os }}" = "macOS" ]]; then
      #       MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
      #       curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
      #       bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
      #     elif [[ "${{ runner.os }}" = "Windows" ]]; then
      #       MINICONDA_FILENAME=Miniconda3-latest-Windows-x86_64.exe
      #       curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
      #       ./Miniconda3-latest-Windows-x86_64.exe //InstallationType=JustMe //RegisterPython=0 //S
      #     fi

      # - name: Setup paths
      #   shell: bash
      #   run: |
      #     echo "::add-path::$HOME/miniconda3/bin"
      #     echo "::add-path::$HOME/miniconda3/Scripts"
      - run: pwd
      # - run: git
      - run: ls
      - run: ls ../
      - run: ls ../../
      - run : ls $GITHUB_WORKSPACE

      - name: Create environment
        run: $CONDA/bin/conda env create -q -f iblenv.yaml

      - run: $CONDA/bin/conda init bash
      - run: $CONDA/bin/conda init fish
      - run: $CONDA/bin/conda init tcsh
      - run: $CONDA/bin/conda init xonsh
      - run: $CONDA/bin/conda init zsh
      - run: $CONDA/bin/conda init powershell
      - run: $CONDA/bin/conda activate iblenv

      - uses: actions/checkout@v2.3.4
        with:
          repository: int-brain-lab/ibllib
      - uses: actions/checkout@v2.3.4
        with:
          repository: int-brain-lab/iblapps
      - uses: actions/checkout@v2.3.4
        with:
          repository: int-brain-lab/IBL-pipeline
      - uses: actions/checkout@v2.3.4
        with:
          repository: int-brain-lab/analysis
      - uses: actions/checkout@v2.3.4
        with:
          repository: int-brain-lab/iblenv
      - uses: actions/checkout@v2.3.4
        with:
          repository: cortex-lab/phylib
      - uses: actions/checkout@v2.3.4
        with:
          repository: cortex-lab/phy

      - run: $CONDA/bin/conda develop $GITHUB_WORKSPACE/ibllib
      - run: $CONDA/bin/conda develop $GITHUB_WORKSPACE/iblapps
      - run: $CONDA/bin/conda develop $GITHUB_WORKSPACE/analysis
      - run: $CONDA/bin/conda develop $GITHUB_WORKSPACE/IBL-pipeline
      - run: $CONDA/bin/conda develop $GITHUB_WORKSPACE/phy
      - run: $CONDA/bin/conda develop $GITHUB_WORKSPACE/phylib
